security:
    encoders:
        App\Entity\Users: bcrypt
    providers:
        database:
            entity:
                class: App\Entity\Users
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        api:
            pattern: ^/api
            stateless: true
            anonymous: true
            json_login:
                # Here authentication will happen (token generation)
                check_path: /api/login_check
                # Handle successfull authentication
                success_handler: lexik_jwt_authentication.handler.authentication_success
                # Handle authentication failure (invalid credentials, no credentials etc).
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
            guard:
                authenticators:
                    #- lexik_jwt_authentication.jwt_token_authenticator
                    - App\Security\TokenAuthenticator
            user_checker: App\Security\UserEnabledChecker

        admin:
            pattern: ^/
            anonymous: true
            form_login:
                check_path: app_login
                login_path: app_login
                default_target_path: admin
                use_referer: true
                target_path_parameter: go_to
            logout:
                path: app_logout
                target: /accueil
            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api,          roles: IS_AUTHENTICATED_FULLY }
        - { path: ^/admin,       roles: ROLE_SUPERADMIN }
        - { path: ^/login,        roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/accueil,             role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/apropos,             role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/rendez/vous/ajouter,             role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/patient/ajouter,             role: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/,             role: IS_AUTHENTICATED_FULLY }
        #- { path: ^/base, roles: IS_AUTHENTICATED_FULLY } # Allows accessing the Swagger UI IS_AUTHENTICATED_ANONYMOUSLY
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }
